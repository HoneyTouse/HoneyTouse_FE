name: TripTeller

on:
  push:
    branches:
      - master

jobs:
  build:
    name: Vite build & deploy
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./pages

    steps:
      - name: checkout Github Action
        uses: actions/checkout@v3

      # npm package cache 사용하기
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"

      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: install npm dependencies
        run: npm install

      - name: Set environment variables
        run: |
          echo "HoneyTouse_HOST_URL=${{ secrets.HOST_URL }}" >> $GITHUB_ENV

      - name: Vite build
        run: npm run build

      # aws user 연결
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_REGION }}

      # vite 빌드한 /dist를 s3로 업로드
      - name: Upload to S3
        run: |
          aws s3 sync ../dist s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete

      # 업로드한 s3 파일을 각 CDN 캐시 무효화하여 리프레시 하기
      - name: CloudFront Invalidation
        run: |
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"